struct A {
  value: Int,
}

fn main(): Int = {
  # Literal value & explicit type.
  let a: Int = 1;

  # Binary-expression as value.
  let b: Int = 1+1;

  # Binary-expression using references as value.
  let c: Int = a+b;

  # Literal value, inferred type.
  let d = 1;

  # Binary-expression value, inferred type.
  let e = c+d;

  # Struct value, explicit type.
  let f: A = new A{1};

  # Struct value, inferred type.
  #let g = new A{1};

  # Struct value, stub inferred type.
  # FIXME: Failing test.
  #let h = new B{1};

  0
}

struct B {
  value: Int,
}
